// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignIn
    getUser={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
           Sign In : 
        </h3>,
        <form
          className="container col s12"
          onSubmit={[Function]}
        >
          <div
            className="row"
          >
            <div
              className="input-field col s12"
            >
              <input
                className="validate"
                id="email"
                onChange={[Function]}
                required={true}
                type="email"
              />
              <label
                htmlFor="email"
              >
                Email
              </label>
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="input-field col s12"
            >
              <label
                htmlFor="password"
              >
                Password
              </label>
              <input
                className="validate"
                id="password"
                onChange={[Function]}
                required={true}
                type="password"
              />
            </div>
          </div>
          <button
            className="waves-effect waves-light btn"
          >
             Log In 
          </button>
        </form>,
      ],
      "className": "container row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": " Sign In : ",
        },
        "ref": null,
        "rendered": " Sign In : ",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <input
                  className="validate"
                  id="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                />
                <label
                  htmlFor="email"
                >
                  Email
                </label>
              </div>
            </div>,
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  className="validate"
                  id="password"
                  onChange={[Function]}
                  required={true}
                  type="password"
                />
              </div>
            </div>,
            <button
              className="waves-effect waves-light btn"
            >
               Log In 
            </button>,
          ],
          "className": "container col s12",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="input-field col s12"
              >
                <input
                  className="validate"
                  id="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                />
                <label
                  htmlFor="email"
                >
                  Email
                </label>
              </div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    className="validate"
                    id="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                  />,
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "validate",
                    "id": "email",
                    "onChange": [Function],
                    "required": true,
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email",
                    "htmlFor": "email",
                  },
                  "ref": null,
                  "rendered": "Email",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="input-field col s12"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  className="validate"
                  id="password"
                  onChange={[Function]}
                  required={true}
                  type="password"
                />
              </div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>,
                  <input
                    className="validate"
                    id="password"
                    onChange={[Function]}
                    required={true}
                    type="password"
                  />,
                  null,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password",
                    "htmlFor": "password",
                  },
                  "ref": null,
                  "rendered": "Password",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "validate",
                    "id": "password",
                    "onChange": [Function],
                    "required": true,
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                null,
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " Log In ",
              "className": "waves-effect waves-light btn",
            },
            "ref": null,
            "rendered": " Log In ",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
             Sign In : 
          </h3>,
          <form
            className="container col s12"
            onSubmit={[Function]}
          >
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <input
                  className="validate"
                  id="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                />
                <label
                  htmlFor="email"
                >
                  Email
                </label>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  className="validate"
                  id="password"
                  onChange={[Function]}
                  required={true}
                  type="password"
                />
              </div>
            </div>
            <button
              className="waves-effect waves-light btn"
            >
               Log In 
            </button>
          </form>,
        ],
        "className": "container row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " Sign In : ",
          },
          "ref": null,
          "rendered": " Sign In : ",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <input
                    className="validate"
                    id="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                  />
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <input
                    className="validate"
                    id="password"
                    onChange={[Function]}
                    required={true}
                    type="password"
                  />
                </div>
              </div>,
              <button
                className="waves-effect waves-light btn"
              >
                 Log In 
              </button>,
            ],
            "className": "container col s12",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="input-field col s12"
                >
                  <input
                    className="validate"
                    id="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                  />
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      className="validate"
                      id="email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                    />,
                    <label
                      htmlFor="email"
                    >
                      Email
                    </label>,
                  ],
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "validate",
                      "id": "email",
                      "onChange": [Function],
                      "required": true,
                      "type": "email",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Email",
                      "htmlFor": "email",
                    },
                    "ref": null,
                    "rendered": "Email",
                    "type": "label",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="input-field col s12"
                >
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <input
                    className="validate"
                    id="password"
                    onChange={[Function]}
                    required={true}
                    type="password"
                  />
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="password"
                    >
                      Password
                    </label>,
                    <input
                      className="validate"
                      id="password"
                      onChange={[Function]}
                      required={true}
                      type="password"
                    />,
                    null,
                  ],
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password",
                      "htmlFor": "password",
                    },
                    "ref": null,
                    "rendered": "Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "validate",
                      "id": "password",
                      "onChange": [Function],
                      "required": true,
                      "type": "password",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  null,
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " Log In ",
                "className": "waves-effect waves-light btn",
              },
              "ref": null,
              "rendered": " Log In ",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`snap 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignIn
    getUser={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
           Sign In : 
        </h3>,
        <form
          className="container col s12"
          onSubmit={[Function]}
        >
          <div
            className="row"
          >
            <div
              className="input-field col s12"
            >
              <input
                className="validate"
                id="email"
                onChange={[Function]}
                required={true}
                type="email"
              />
              <label
                htmlFor="email"
              >
                Email
              </label>
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="input-field col s12"
            >
              <label
                htmlFor="password"
              >
                Password
              </label>
              <input
                className="validate"
                id="password"
                onChange={[Function]}
                required={true}
                type="password"
              />
            </div>
          </div>
          <button
            className="waves-effect waves-light btn"
          >
             Log In 
          </button>
        </form>,
      ],
      "className": "container row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": " Sign In : ",
        },
        "ref": null,
        "rendered": " Sign In : ",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <input
                  className="validate"
                  id="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                />
                <label
                  htmlFor="email"
                >
                  Email
                </label>
              </div>
            </div>,
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  className="validate"
                  id="password"
                  onChange={[Function]}
                  required={true}
                  type="password"
                />
              </div>
            </div>,
            <button
              className="waves-effect waves-light btn"
            >
               Log In 
            </button>,
          ],
          "className": "container col s12",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="input-field col s12"
              >
                <input
                  className="validate"
                  id="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                />
                <label
                  htmlFor="email"
                >
                  Email
                </label>
              </div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    className="validate"
                    id="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                  />,
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "validate",
                    "id": "email",
                    "onChange": [Function],
                    "required": true,
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email",
                    "htmlFor": "email",
                  },
                  "ref": null,
                  "rendered": "Email",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="input-field col s12"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  className="validate"
                  id="password"
                  onChange={[Function]}
                  required={true}
                  type="password"
                />
              </div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>,
                  <input
                    className="validate"
                    id="password"
                    onChange={[Function]}
                    required={true}
                    type="password"
                  />,
                  null,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password",
                    "htmlFor": "password",
                  },
                  "ref": null,
                  "rendered": "Password",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "validate",
                    "id": "password",
                    "onChange": [Function],
                    "required": true,
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                null,
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " Log In ",
              "className": "waves-effect waves-light btn",
            },
            "ref": null,
            "rendered": " Log In ",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
             Sign In : 
          </h3>,
          <form
            className="container col s12"
            onSubmit={[Function]}
          >
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <input
                  className="validate"
                  id="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                />
                <label
                  htmlFor="email"
                >
                  Email
                </label>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  className="validate"
                  id="password"
                  onChange={[Function]}
                  required={true}
                  type="password"
                />
              </div>
            </div>
            <button
              className="waves-effect waves-light btn"
            >
               Log In 
            </button>
          </form>,
        ],
        "className": "container row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " Sign In : ",
          },
          "ref": null,
          "rendered": " Sign In : ",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <input
                    className="validate"
                    id="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                  />
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <input
                    className="validate"
                    id="password"
                    onChange={[Function]}
                    required={true}
                    type="password"
                  />
                </div>
              </div>,
              <button
                className="waves-effect waves-light btn"
              >
                 Log In 
              </button>,
            ],
            "className": "container col s12",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="input-field col s12"
                >
                  <input
                    className="validate"
                    id="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                  />
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      className="validate"
                      id="email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                    />,
                    <label
                      htmlFor="email"
                    >
                      Email
                    </label>,
                  ],
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "validate",
                      "id": "email",
                      "onChange": [Function],
                      "required": true,
                      "type": "email",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Email",
                      "htmlFor": "email",
                    },
                    "ref": null,
                    "rendered": "Email",
                    "type": "label",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="input-field col s12"
                >
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <input
                    className="validate"
                    id="password"
                    onChange={[Function]}
                    required={true}
                    type="password"
                  />
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="password"
                    >
                      Password
                    </label>,
                    <input
                      className="validate"
                      id="password"
                      onChange={[Function]}
                      required={true}
                      type="password"
                    />,
                    null,
                  ],
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password",
                      "htmlFor": "password",
                    },
                    "ref": null,
                    "rendered": "Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "validate",
                      "id": "password",
                      "onChange": [Function],
                      "required": true,
                      "type": "password",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  null,
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " Log In ",
                "className": "waves-effect waves-light btn",
              },
              "ref": null,
              "rendered": " Log In ",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`snapshot isAuth true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignIn
    getUser={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "push": false,
      "to": "/",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "push": false,
        "to": "/",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`snapshot testAuth true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignIn
    getUser={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
           Sign In : 
        </h3>,
        <form
          className="container col s12"
          onSubmit={[Function]}
        >
          <div
            className="row"
          >
            <div
              className="input-field col s12"
            >
              <input
                className="validate"
                id="email"
                onChange={[Function]}
                required={true}
                type="email"
              />
              <label
                htmlFor="email"
              >
                Email
              </label>
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="input-field col s12"
            >
              <label
                htmlFor="password"
              >
                Password
              </label>
              <input
                className="validate"
                id="password"
                onChange={[Function]}
                required={true}
                type="password"
              />
              <span
                className="helper-text red-text"
              >
                wrong password or email
              </span>
            </div>
          </div>
          <button
            className="waves-effect waves-light btn"
          >
             Log In 
          </button>
        </form>,
      ],
      "className": "container row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": " Sign In : ",
        },
        "ref": null,
        "rendered": " Sign In : ",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <input
                  className="validate"
                  id="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                />
                <label
                  htmlFor="email"
                >
                  Email
                </label>
              </div>
            </div>,
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  className="validate"
                  id="password"
                  onChange={[Function]}
                  required={true}
                  type="password"
                />
                <span
                  className="helper-text red-text"
                >
                  wrong password or email
                </span>
              </div>
            </div>,
            <button
              className="waves-effect waves-light btn"
            >
               Log In 
            </button>,
          ],
          "className": "container col s12",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="input-field col s12"
              >
                <input
                  className="validate"
                  id="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                />
                <label
                  htmlFor="email"
                >
                  Email
                </label>
              </div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    className="validate"
                    id="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                  />,
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "validate",
                    "id": "email",
                    "onChange": [Function],
                    "required": true,
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email",
                    "htmlFor": "email",
                  },
                  "ref": null,
                  "rendered": "Email",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="input-field col s12"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  className="validate"
                  id="password"
                  onChange={[Function]}
                  required={true}
                  type="password"
                />
                <span
                  className="helper-text red-text"
                >
                  wrong password or email
                </span>
              </div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>,
                  <input
                    className="validate"
                    id="password"
                    onChange={[Function]}
                    required={true}
                    type="password"
                  />,
                  <span
                    className="helper-text red-text"
                  >
                    wrong password or email
                  </span>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password",
                    "htmlFor": "password",
                  },
                  "ref": null,
                  "rendered": "Password",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "validate",
                    "id": "password",
                    "onChange": [Function],
                    "required": true,
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "wrong password or email",
                    "className": "helper-text red-text",
                  },
                  "ref": null,
                  "rendered": "wrong password or email",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " Log In ",
              "className": "waves-effect waves-light btn",
            },
            "ref": null,
            "rendered": " Log In ",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
             Sign In : 
          </h3>,
          <form
            className="container col s12"
            onSubmit={[Function]}
          >
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <input
                  className="validate"
                  id="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                />
                <label
                  htmlFor="email"
                >
                  Email
                </label>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="input-field col s12"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  className="validate"
                  id="password"
                  onChange={[Function]}
                  required={true}
                  type="password"
                />
                <span
                  className="helper-text red-text"
                >
                  wrong password or email
                </span>
              </div>
            </div>
            <button
              className="waves-effect waves-light btn"
            >
               Log In 
            </button>
          </form>,
        ],
        "className": "container row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " Sign In : ",
          },
          "ref": null,
          "rendered": " Sign In : ",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <input
                    className="validate"
                    id="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                  />
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <input
                    className="validate"
                    id="password"
                    onChange={[Function]}
                    required={true}
                    type="password"
                  />
                  <span
                    className="helper-text red-text"
                  >
                    wrong password or email
                  </span>
                </div>
              </div>,
              <button
                className="waves-effect waves-light btn"
              >
                 Log In 
              </button>,
            ],
            "className": "container col s12",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="input-field col s12"
                >
                  <input
                    className="validate"
                    id="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                  />
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      className="validate"
                      id="email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                    />,
                    <label
                      htmlFor="email"
                    >
                      Email
                    </label>,
                  ],
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "validate",
                      "id": "email",
                      "onChange": [Function],
                      "required": true,
                      "type": "email",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Email",
                      "htmlFor": "email",
                    },
                    "ref": null,
                    "rendered": "Email",
                    "type": "label",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="input-field col s12"
                >
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <input
                    className="validate"
                    id="password"
                    onChange={[Function]}
                    required={true}
                    type="password"
                  />
                  <span
                    className="helper-text red-text"
                  >
                    wrong password or email
                  </span>
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="password"
                    >
                      Password
                    </label>,
                    <input
                      className="validate"
                      id="password"
                      onChange={[Function]}
                      required={true}
                      type="password"
                    />,
                    <span
                      className="helper-text red-text"
                    >
                      wrong password or email
                    </span>,
                  ],
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password",
                      "htmlFor": "password",
                    },
                    "ref": null,
                    "rendered": "Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "validate",
                      "id": "password",
                      "onChange": [Function],
                      "required": true,
                      "type": "password",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "wrong password or email",
                      "className": "helper-text red-text",
                    },
                    "ref": null,
                    "rendered": "wrong password or email",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " Log In ",
                "className": "waves-effect waves-light btn",
              },
              "ref": null,
              "rendered": " Log In ",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
